<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

       default-init-method="initialize"
       default-destroy-method="destroy"
       default-lazy-init="true">

    <!--
    Unicon Implementation Note:
    This file is the clone of conf/authn/ldap-authn-config.xml. It has been modified to include a hard coded
    literal "Employee" to each ldap property reference, or "employee" to each bean id or ref. This is to distinguish
    beans from the "student" equivalent file.
    -->

    <alias name="%{idp.authn.EmployeeLDAP.authenticator:employeeAnonSearchAuthenticator}" alias="shibboleth.authn.EmployeeLDAP.authenticator" />
    <bean id="shibboleth.authn.EmployeeLDAP.returnAttributes" parent="shibboleth.CommaDelimStringArray">
        <constructor-arg type="java.lang.String" value="%{idp.authn.EmployeeLDAP.returnAttributes:1.1}" />
    </bean>

    <!--
    <alias name="ValidateUsernamePasswordAgainstLDAP" alias="ValidateUsernamePassword" />
    -->

    <!-- Connection Configuration -->
    <bean id="employeeConnectionConfig" class="org.ldaptive.ConnectionConfig" abstract="true" p:ldapUrl="%{idp.authn.EmployeeLDAP.ldapURL}"
        p:useStartTLS="%{idp.authn.EmployeeLDAP.useStartTLS:true}"
        p:useSSL="%{idp.authn.EmployeeLDAP.useSSL:false}"
        p:connectTimeoutDuration="%{idp.authn.EmployeeLDAP.connectTimeout:PT3S}"
        p:responseTimeoutDuration="%{idp.authn.EmployeeLDAP.responseTimeout:PT3S}"
        p:sslConfig-ref="employeeSslConfig" />

    <alias name="%{idp.authn.EmployeeLDAP.sslConfig:employeeCertificateTrust}" alias="employeeSslConfig" />

    <bean id="employeeJvmTrust" class="org.ldaptive.ssl.SslConfig" />
    <bean id="employeeCertificateTrust" class="org.ldaptive.ssl.SslConfig">
        <property name="credentialConfig">
            <bean parent="shibboleth.X509ResourceCredentialConfig" p:trustCertificates="%{idp.authn.EmployeeLDAP.trustCertificates:undefined}" />
        </property>
    </bean>
    <bean id="employeeKeyStoreTrust" class="org.ldaptive.ssl.SslConfig">
        <property name="credentialConfig">
            <bean parent="shibboleth.KeystoreResourceCredentialConfig" p:truststore="%{idp.authn.EmployeeLDAP.trustStore:undefined}" /> 
        </property>
    </bean>

    <!-- Authentication handler -->
    <bean id="employeeAuthHandler" class="org.ldaptive.auth.PooledBindAuthenticationHandler" p:connectionFactory-ref="employeeBindPooledConnectionFactory" />
    <bean id="employeeBindPooledConnectionFactory" class="org.ldaptive.pool.PooledConnectionFactory" p:connectionPool-ref="employeeBindConnectionPool" />
    <bean id="employeeBindConnectionPool" class="org.ldaptive.pool.BlockingConnectionPool" parent="employeeConnectionPool"
        p:connectionFactory-ref="employeeBindConnectionFactory" p:name="employeeBind-pool" />
    <bean id="employeeBindConnectionFactory" class="org.ldaptive.DefaultConnectionFactory" p:connectionConfig-ref="employeeBindConnectionConfig" />
    <bean id="employeeBindConnectionConfig" parent="employeeConnectionConfig" />

    <!-- Format DN resolution -->
    <bean id="employeeFormatDnResolver" class="org.ldaptive.auth.FormatDnResolver" p:format="%{idp.authn.EmployeeLDAP.dnFormat:undefined}" />

    <!-- Pool Configuration -->
    <bean id="employeeConnectionPool" class="org.ldaptive.pool.BlockingConnectionPool" abstract="true"
        p:blockWaitTimeDuration="%{idp.pool.EmployeeLDAP.blockWaitTime:PT3S}"
        p:poolConfig-ref="employeePoolConfig"
        p:pruneStrategy-ref="employeePruneStrategy"
        p:validator-ref="employeeSearchValidator"
        p:failFastInitialize="%{idp.pool.EmployeeLDAP.failFastInitialize:false}" />
    <bean id="employeePoolConfig" class="org.ldaptive.pool.PoolConfig"
        p:minPoolSize="%{idp.pool.EmployeeLDAP.minSize:3}"
        p:maxPoolSize="%{idp.pool.EmployeeLDAP.maxSize:10}"
        p:validateOnCheckOut="%{idp.pool.EmployeeLDAP.validateOnCheckout:false}"
        p:validatePeriodically="%{idp.pool.EmployeeLDAP.validatePeriodically:true}"
        p:validatePeriodDuration="%{idp.pool.EmployeeLDAP.validatePeriod:PT5M}" />
    <bean id="employeePruneStrategy" class="org.ldaptive.pool.IdlePruneStrategy"
        p:prunePeriodDuration="%{idp.pool.EmployeeLDAP.prunePeriod:PT5M}"
        p:idleTimeDuration="%{idp.pool.EmployeeLDAP.idleTime:PT10M}" />
    <bean id="employeeSearchValidator" class="org.ldaptive.pool.SearchValidator" />

    <!-- Anonymous Search Configuration -->
    <bean name="employeeAnonSearchAuthenticator" class="org.ldaptive.auth.Authenticator" p:resolveEntryOnFailure="%{idp.authn.EmployeeLDAP.resolveEntryOnFailure:false}">
        <constructor-arg index="0" ref="employeeAnonSearchDnResolver" />
        <constructor-arg index="1" ref="employeeAuthHandler" />
    </bean>
    <bean id="employeeAnonSearchDnResolver" class="net.shibboleth.idp.authn.PooledTemplateSearchDnResolver"
        p:baseDn="#{'%{idp.authn.EmployeeLDAP.baseDN:undefined}'.trim()}"
        p:subtreeSearch="%{idp.authn.EmployeeLDAP.subtreeSearch:false}"
        p:connectionFactory-ref="employeeAnonSearchPooledConnectionFactory" >
        <constructor-arg index="0" ref="shibboleth.VelocityEngine" />
        <constructor-arg index="1" value="#{'%{idp.authn.EmployeeLDAP.userFilter:undefined}'.trim()}" />
    </bean>
    <bean id="employeeAnonSearchPooledConnectionFactory" class="org.ldaptive.pool.PooledConnectionFactory"
        p:connectionPool-ref="employeeAnonSearchConnectionPool" />
    <bean id="employeeAnonSearchConnectionPool" class="org.ldaptive.pool.BlockingConnectionPool" parent="employeeConnectionPool"
        p:connectionFactory-ref="employeeAnonSearchConnectionFactory" p:name="emloyeeSearch-pool" />
    <bean id="employeeAnonSearchConnectionFactory" class="org.ldaptive.DefaultConnectionFactory" p:connectionConfig-ref="employeeAnonSearchConnectionConfig" />
    <bean id="employeeAnonSearchConnectionConfig" parent="employeeConnectionConfig" />

    <!-- Bind Search Configuration -->
    <bean name="employeeBindSearchAuthenticator" class="org.ldaptive.auth.Authenticator"  p:resolveEntryOnFailure="%{idp.authn.EmployeeLDAP.resolveEntryOnFailure:false}">
        <constructor-arg index="0" ref="employeeBindSearchDnResolver" />
        <constructor-arg index="1" ref="employeeAuthHandler" />
    </bean>
    <bean id="employeeBindSearchDnResolver" class="net.shibboleth.idp.authn.PooledTemplateSearchDnResolver" 
        p:baseDn="#{'%{idp.authn.EmployeeLDAP.baseDN:undefined}'.trim()}"
        p:subtreeSearch="%{idp.authn.EmployeeLDAP.subtreeSearch:false}"
        p:connectionFactory-ref="employeeBindSearchPooledConnectionFactory" >
        <constructor-arg index="0" ref="shibboleth.VelocityEngine" />
        <constructor-arg index="1" value="#{'%{idp.authn.EmployeeLDAP.userFilter:undefined}'.trim()}" />
    </bean>
    <bean id="employeeBindSearchPooledConnectionFactory" class="org.ldaptive.pool.PooledConnectionFactory"
        p:connectionPool-ref="employeeBindSearchConnectionPool" />
    <bean id="employeeBindSearchConnectionPool" class="org.ldaptive.pool.BlockingConnectionPool" parent="employeeConnectionPool"
        p:connectionFactory-ref="employeeBindSearchConnectionFactory" p:name="employeeSearch-pool" />
    <bean id="employeeBindSearchConnectionFactory" class="org.ldaptive.DefaultConnectionFactory" p:connectionConfig-ref="employeeBindSearchConnectionConfig" />
    <bean id="employeeBindSearchConnectionConfig" parent="employeeConnectionConfig" p:connectionInitializer-ref="employeeBindConnectionInitializer" />
    <bean id="employeeBindConnectionInitializer" class="org.ldaptive.BindConnectionInitializer" 
           p:bindDn="#{'%{idp.authn.EmployeeLDAP.bindDN:undefined}'.trim()}">
        <property name="bindCredential">
            <bean class="org.ldaptive.Credential">
                <constructor-arg value="%{idp.authn.EmployeeLDAP.bindDNCredential:undefined}" />
            </bean>
        </property>
    </bean>

    <!-- Direct Search Configuration -->
    <bean name="employeeDirectAuthenticator" class="org.ldaptive.auth.Authenticator" p:resolveEntryOnFailure="%{idp.authn.EmployeeLDAP.resolveEntryOnFailure:false}">
        <constructor-arg index="0" ref="employeeFormatDnResolver" />
        <constructor-arg index="1" ref="employeeAuthHandler" />
    </bean>

    <!-- Want to use ppolicy? Configure support by adding <bean id="authenticationResponseHandler" class="org.ldaptive.auth.ext.PasswordPolicyAuthenticationResponseHandler" 
        /> add p:authenticationResponseHandlers-ref="authenticationResponseHandler" to the authenticator <bean id="authenticationControl" 
        class="org.ldaptive.control.PasswordPolicyControl" /> add p:authenticationControls-ref="authenticationControl" to the authHandler -->

    <!-- Active Directory Configuration -->
    <bean id="employeeAdAuthenticator" class="org.ldaptive.auth.Authenticator" p:authenticationResponseHandlers-ref="employeeAuthenticationResponseHandler"
        p:resolveEntryOnFailure="%{idp.authn.EmployeeLDAP.resolveEntryOnFailure:false}">
        <constructor-arg index="0" ref="employeeFormatDnResolver" />
        <constructor-arg index="1" ref="employeeAuthHandler" />
    </bean>
    <bean id="employeeAuthenticationResponseHandler" class="org.ldaptive.auth.ext.ActiveDirectoryAuthenticationResponseHandler" />

</beans>
